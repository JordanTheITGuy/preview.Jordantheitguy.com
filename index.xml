<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>JordanTheITGuy</title><link>http://preview.jordantheitguy.com/</link><description>Recent content on JordanTheITGuy</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Fri, 17 Dec 2021 00:00:00 +0000</lastBuildDate><atom:link href="http://preview.jordantheitguy.com/index.xml" rel="self" type="application/rss+xml"/><item><title>Find Log4J With Intune Proactive Remediations</title><link>http://preview.jordantheitguy.com/post/find-log4j-with-intune-proactive-remediations/</link><pubDate>Fri, 17 Dec 2021 00:00:00 +0000</pubDate><guid>http://preview.jordantheitguy.com/post/find-log4j-with-intune-proactive-remediations/</guid><description>On December 10th 2021 CVE-2021-44228 was unveiled- queue the mass panic. A simple logging component which had been around for… forever in a whole bunch of things including but not limited to Minecraft.
Update: February 6th 2022 - It&amp;rsquo;s worth nothing that even now three months later this vulnerability is still having massive impact all over the world as the threat hunting methods originally devised were limited in their nature. In fact, we have even seen cases where grey hat hackers were using the exploit to patch the exploit.</description></item><item><title>Adding E-Mail Property in AD</title><link>http://preview.jordantheitguy.com/post/adding-email-property-in-ad/</link><pubDate>Thu, 11 Feb 2016 00:00:00 +0000</pubDate><guid>http://preview.jordantheitguy.com/post/adding-email-property-in-ad/</guid><description>A few months back I worked on a project to configure a password manager that was managing accounts across multiple domains without a trust.
The Problem: This password management software was actually pretty cool. It’s able to match user accounts in its secure data base using a particular active directory attribute. In this case the e-mail field. Unfortunately, the users with accounts in both domains didn’t have the same e-mail attribute.</description></item><item><title>Protected Groups in Active Directory</title><link>http://preview.jordantheitguy.com/post/protected-groups-in-active-directory/</link><pubDate>Tue, 03 Nov 2015 00:00:00 +0000</pubDate><guid>http://preview.jordantheitguy.com/post/protected-groups-in-active-directory/</guid><description>The Question:
This morning we hired a new and wonderful guy for our Help-desk and when setting up this persons account a strange oddity occured that caused one of the other helpdesk workers to come over to me and ask, “Hey why can’t I reset this new guys account? I can reset anyone else’s account but not his”. Now, I’m not proud I’ll admit at first I was stumped on this one there shouldn’t be any reason why you can’t reset his account I said – Mildly grumpy having only had one cup of coffee so far that day – Show me what you mean!</description></item><item><title>PowerShell Get Members Of Group</title><link>http://preview.jordantheitguy.com/post/powershell_get_members_of_group/</link><pubDate>Fri, 30 Oct 2015 00:00:00 +0000</pubDate><guid>http://preview.jordantheitguy.com/post/powershell_get_members_of_group/</guid><description>Every now and again there comes a need to get the members of a group and manipulate that data in some fashion.
Now there are many ways to skin this cat and work with this data from VBscript, to utilizing DSquery to Quest Powershell CMDLETS to just raw powershell cmdlets.
Rather than spend time writing a new script every time you work at a different place or having to change constants in a script I spent some time writing a quick powershell script that accepts some variable information an outputs a CSV, or TXT file (your choice) with the user’s SAMaccountName combined with first and last name for all members of that group.</description></item><item><title>Powershell Change The Local Administrator Account/Password</title><link>http://preview.jordantheitguy.com/post/powershell_change_localadminpassword/</link><pubDate>Tue, 27 Oct 2015 00:00:00 +0000</pubDate><guid>http://preview.jordantheitguy.com/post/powershell_change_localadminpassword/</guid><description>What Happened? Back in May of 2014 Microsoft released a windows update – MS14-025 – that removed the ability to push out passwords to workstations remotely using group policy due to issues with elevation of privilege. If that patch is applied it’s a rather large pain to change the local admin after that without something like SCCM in place.
Working Around the Issue After working through some similar issues and reading a few TechNet Articles I decided to build a quick and slightly dirty powershell script to do several things as needed.</description></item><item><title>Visio 2010/2013 Client Server Version Error in SCOM 2012R2 Visio Drawings</title><link>http://preview.jordantheitguy.com/post/client_server_version_error_in_scom_2012r2_visio/</link><pubDate>Wed, 21 Oct 2015 00:00:00 +0000</pubDate><guid>http://preview.jordantheitguy.com/post/client_server_version_error_in_scom_2012r2_visio/</guid><description>The Question:
Testing Level 2 Testing Level 3 “Wouldn’t it be awesome if we could create pretty Visio Drawings of our systems for the customers to look at and see up-time of servers using SCOM Data?”
Well turns out in fact you can do this! It’s a feature it’s been around in SCOM for quite some time. However it’s not exactly the best documented component and certainly has a couple of pit fulls, among them the frustrating “Client Not Supported Error”.</description></item><item><title>How To Reset Permissions on a Users Home Directory</title><link>http://preview.jordantheitguy.com/post/how_to_reset_permissions_on_a_users_home_directory/</link><pubDate>Wed, 24 Jun 2015 00:00:00 +0000</pubDate><guid>http://preview.jordantheitguy.com/post/how_to_reset_permissions_on_a_users_home_directory/</guid><description>Below is a script, provided as is, that is a non-fancy way to reset permissions with some sense of logic on a users home directory. I&amp;rsquo;ve got a slightly better version of it, but I want to tweak a few things before posting it online.
0 1$Folder = Read-Host &amp;#34;Enter the name of the user to reset permissions for&amp;#34; 2#Enter the name of the user directory here 3$Existance = Get-ADUser -LDAPFilter &amp;#34;(SAMAccountName=$Folder)&amp;#34; 4$Path = &amp;#39;\\YOURNETWORKSHAREHERE&amp;#39; 5$Fullpath = $Path + $Folder 6#Combine the network path with the variable of the users home folder 7$CheckExistance = Test-Path $fullpath 8#Checks to make sure the path exists 9If ($Existance -eq $Null) { 10 &amp;#34;User Does not exist in AD&amp;#34; 11 #If you get this, the ldap filter didnt find the user in active directory.</description></item><item><title>About Me</title><link>http://preview.jordantheitguy.com/about/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://preview.jordantheitguy.com/about/</guid><description>Hey there, I&amp;rsquo;m Jordan nice to meet you. If you&amp;rsquo;ve found your way here to my about page, you&amp;rsquo;re probably looking for some information about who I am and what I do so let me help fill in some blanks.
I&amp;rsquo;m an engineer, I do engineer type things. I started working in IT back in 2008, my freshman year of college. Somehow my resident assistant saw me playing World Of Warcraft and said &amp;ldquo;hey want a job&amp;rdquo; to which I said, well I like money, and next thing I knew I was building a print server.</description></item></channel></rss>